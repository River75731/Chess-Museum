{
    "version": "0.2.0",
    "configurations": [
        {
             "name": "Debug C/C++",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/${fileBasenameNoExtension}.exe",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "miDebuggerPath": "D:/MinGW-w64/mingw64/bin/gdb.exe",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ],
            "preLaunchTask": "build & debug file"
        },
        {
            "name": "Debug C/C++ Mutiple", //配置文件的名字，可以随便起
            "type": "cppdbg", //调试的类型，Vscode现在支持很多，我这里主要是C，所以只能是cppdbg
            "request": "launch",//配置文件的请求类型，有launch和attach两种，具体看官方文档
            "targetArchitecture": "x86_64", //硬件内核架构，为64bit，如图设置
            "program": "${workspaceFolder}/debug.exe",//可执行文件的路径和文件名称
            "args": [],//主函数调用时传入的参数,,
            "stopAtEntry": false,//设为true时程序将暂停在程序入口处
            "cwd": "${workspaceFolder}",//调试时的工作目录
            // "internalConsoleOptions": "openOnSessionStart",//
            "externalConsole": true,//调试时是否显示控制台窗口
            "MIMode": "gdb",//指定连接的调试器，可以省略不写
            "miDebuggerPath": "D:/MinGW-w64/mingw64/bin/gdb.exe",//调试器路径,在Linux环境下需要注释掉这一行
            "setupCommands": [ //不知道干嘛的
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build & debug mutiple files" //调试会话开始前执行的任务，一般为编译程序。与tasks.json的label相对应
        }
    ]
}